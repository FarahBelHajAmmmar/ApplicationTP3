// <auto-generated />
using System;
using ApplicationTP3_second_.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationTP3_second_.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231114172341_thirdone")]
    partial class thirdone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationTP3_second_.Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MembershiptypesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembershiptypesId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Genres", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "84ca0bcd-082c-49cb-aa77-ea2f1f5f8285",
                            GenreName = "GenreFromJsonFile1"
                        },
                        new
                        {
                            Id = "79e6f638-d7e7-4f63-8365-f172cb925381",
                            GenreName = "GenreFromJsonFile2"
                        });
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Membershiptypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("DiscountRate")
                        .HasColumnType("real");

                    b.Property<float>("DurationInMonth")
                        .HasColumnType("real");

                    b.Property<float>("Signupfee")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Membershiptypes");
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genres_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("genres_Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CustomersMovies", b =>
                {
                    b.Property<int>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("CustomersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("CustomersMovies");
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Customers", b =>
                {
                    b.HasOne("ApplicationTP3_second_.Models.Membershiptypes", "Membershiptypes")
                        .WithMany("Customers")
                        .HasForeignKey("MembershiptypesId");

                    b.Navigation("Membershiptypes");
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Movies", b =>
                {
                    b.HasOne("ApplicationTP3_second_.Models.Genres", "Genres")
                        .WithMany("Movies")
                        .HasForeignKey("genres_Id");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("CustomersMovies", b =>
                {
                    b.HasOne("ApplicationTP3_second_.Models.Customers", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationTP3_second_.Models.Movies", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Genres", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("ApplicationTP3_second_.Models.Membershiptypes", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
